################################################################################

# This Makefile generated by GoMakeGen 3.3.1 using next command:
# gomakegen --mod .
#
# More info: https://kaos.sh/gomakegen

################################################################################

ifdef VERBOSE ## Print verbose information (Flag)
VERBOSE_FLAG = -v
endif

ifdef PROXY ## Force proxy usage for downloading dependencies (Flag)
export GOPROXY=https://proxy.golang.org/cached-only,direct
endif

ifdef CGO ## Enable CGO usage (Flag)
export CGO_ENABLED=1
else
export CGO_ENABLED=0
endif

MAKEDIR = $(dir $(realpath $(firstword $(MAKEFILE_LIST))))
GITREV ?= $(shell test -s $(MAKEDIR)/.git && git rev-parse --short HEAD)

################################################################################

.DEFAULT_GOAL := help
.PHONY = fmt vet all install uninstall clean deps update init vendor tidy mod-init mod-update mod-download mod-vendor help

################################################################################

all: aligo ## Build all binaries

aligo:
	@echo "[36;1mBuilding aligoâ€¦[0m"
	@go build $(VERBOSE_FLAG) -ldflags="-X main.gitrev=$(GITREV)" aligo.go

install: ## Install all binaries
	@echo "[36;1mInstalling binariesâ€¦[0m"
	@cp aligo /usr/bin/aligo

uninstall: ## Uninstall all binaries
	@echo "[36;1mRemoving installed binariesâ€¦[0m"
	@rm -f /usr/bin/aligo

init: mod-init ## Initialize new module

deps: mod-download ## Download dependencies

update: mod-update ## Update dependencies to the latest versions

vendor: mod-vendor ## Make vendored copy of dependencies

tidy: ## Cleanup dependencies
	@echo "[32mâ€¢[0m[90mâ€¢[0m [36;1mTidying up dependenciesâ€¦[0m"
ifdef COMPAT ## Compatible Go version (String)
	@go mod tidy $(VERBOSE_FLAG) -compat=$(COMPAT) -go=$(COMPAT)
else
	@go mod tidy $(VERBOSE_FLAG)
endif
	@echo "[32mâ€¢â€¢[0m [36;1mUpdating vendored dependenciesâ€¦[0m"
	@test -d vendor && rm -rf vendor && go mod vendor $(VERBOSE_FLAG) || :

mod-init:
	@echo "[32mâ€¢[0m[90mâ€¢â€¢[0m [36;1mModules initializationâ€¦[0m"
	@rm -f go.mod go.sum
ifdef MODULE_PATH ## Module path for initialization (String)
	@go mod init $(MODULE_PATH)
else
	@go mod init
endif

	@echo "[32mâ€¢â€¢[0m[90mâ€¢[0m [36;1mDependencies cleanupâ€¦[0m"
ifdef COMPAT ## Compatible Go version (String)
	@go mod tidy $(VERBOSE_FLAG) -compat=$(COMPAT) -go=$(COMPAT)
else
	@go mod tidy $(VERBOSE_FLAG)
endif
	@echo "[32mâ€¢â€¢â€¢[0m [36;1mStripping toolchain infoâ€¦[0m"
	@grep -q 'toolchain ' go.mod && go mod edit -toolchain=none || :

mod-update:
	@echo "[32mâ€¢[0m[90mâ€¢â€¢â€¢[0m [36;1mUpdating dependenciesâ€¦[0m"
ifdef UPDATE_ALL ## Update all dependencies (Flag)
	@go get -u $(VERBOSE_FLAG) all
else
	@go get -u $(VERBOSE_FLAG) ./...
endif

	@echo "[32mâ€¢â€¢[0m[90mâ€¢â€¢[0m [36;1mStripping toolchain infoâ€¦[0m"
	@grep -q 'toolchain ' go.mod && go mod edit -toolchain=none || :

	@echo "[32mâ€¢â€¢â€¢[0m[90mâ€¢[0m [36;1mDependencies cleanupâ€¦[0m"
ifdef COMPAT
	@go mod tidy $(VERBOSE_FLAG) -compat=$(COMPAT)
else
	@go mod tidy $(VERBOSE_FLAG)
endif

	@echo "[32mâ€¢â€¢â€¢â€¢[0m [36;1mUpdating vendored dependenciesâ€¦[0m"
	@test -d vendor && rm -rf vendor && go mod vendor $(VERBOSE_FLAG) || :

mod-download:
	@echo "[36;1mDownloading dependenciesâ€¦[0m"
	@go mod download

mod-vendor:
	@echo "[36;1mVendoring dependenciesâ€¦[0m"
	@rm -rf vendor && go mod vendor $(VERBOSE_FLAG) || :

fmt: ## Format source code with gofmt
	@echo "[36;1mFormatting sourcesâ€¦[0m"
	@find . -name "*.go" -exec gofmt -s -w {} \;

vet: ## Runs 'go vet' over sources
	@echo "[36;1mRunning 'go vet' over sourcesâ€¦[0m"
	@go vet -composites=false -printfuncs=LPrintf,TLPrintf,TPrintf,log.Debug,log.Info,log.Warn,log.Error,log.Critical,log.Print ./...

clean: ## Remove generated files
	@echo "[36;1mRemoving built binariesâ€¦[0m"
	@rm -f aligo

help: ## Show this info
	@echo -e '\n\033[1mTargets:\033[0m\n'
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) \
		| awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[33m%-9s\033[0m  %s\n", $$1, $$2}'
	@echo -e '\n\033[1mVariables:\033[0m\n'
	@grep -E '^ifdef [A-Z_]+ .*?## .*$$' $(abspath $(lastword $(MAKEFILE_LIST))) \
		| sed 's/ifdef //' \
		| sort -h \
		| awk 'BEGIN {FS = " .*?## "}; {printf "  \033[32m%-11s\033[0m  %s\n", $$1, $$2}'
	@echo -e ''
	@echo -e '\033[90mGenerated by GoMakeGen 3.3.1\033[0m\n'

################################################################################
